import{V as r}from"./ui.c0058d49.js";import{g as a}from"./util.64e2e8f0.js";import{n as s}from"./index.ec256302.js";const i={model:{prop:"value",event:"change"},props:{value:{type:Array,required:!1},valueKey:{type:String,required:!1,default(){return a("valueKey","value")}},labelKey:{type:String,required:!1,default(){return a("labelKey","label")}},nullAble:{type:Boolean,required:!1,default(){return a("nullAble",!0)}},request:{type:Function,required:!1},param:{type:String,required:!1,default(){return a("param",void 0)}},responseTransfer:{type:Function,required:!1,default(t){return r.$DictControl&&typeof r.$DictControl.responseTransfer=="function"?r.$DictControl.responseTransfer(t):t}}},data(){return{bindValue:[],list:[]}},watch:{value:{handler(){this.value&&(this.bindValue=this.value)},immediate:!0}},methods:{fetchData:async function(){if(!r.$DictControl&&!r.$DictControl.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const t=this.request||r.$DictControl.request;if(typeof t!="function")return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await t(this.param))}},created(){this.fetchData()}};var u=function(){var e=this,l=e._self._c;return l("el-cascader",e._b({attrs:{options:e.list,props:{value:this.valueKey,label:this.labelKey}},on:{change:function(n){return e.$emit("change",n)}},model:{value:e.bindValue,callback:function(n){e.bindValue=n},expression:"bindValue"}},"el-cascader",e.$attrs,!1))},o=[],c=s(i,u,o,!1,null,"518ea0ab",null,null);const _=c.exports;export{_ as default};
