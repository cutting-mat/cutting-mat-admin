import{V as n}from"./ui.c0058d49.js";import{g as a}from"./util.64e2e8f0.js";import{n as u}from"./index.ec256302.js";const s={model:{prop:"value",event:"change"},props:{value:{type:Array,required:!1},valueKey:{type:String,required:!1,default(){return a("valueKey","value")}},labelKey:{type:String,required:!1,default(){return a("labelKey","label")}},nullAble:{type:Boolean,required:!1,default(){return a("nullAble",!0)}},request:{type:Function,required:!1},param:{type:String,required:!1,default(){return a("param",void 0)}},responseTransfer:{type:Function,required:!1,default(r){return n.$DictControl&&typeof n.$DictControl.responseTransfer=="function"?n.$DictControl.responseTransfer(r):r}}},data(){return{bindValue:[],list:[]}},watch:{value:{handler(){this.value&&(this.bindValue=this.value)},immediate:!0}},methods:{fetchData:async function(){if(!n.$DictControl&&!n.$DictControl.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const r=this.request||n.$DictControl.request;if(typeof r!="function")return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await r(this.param))}},created(){this.fetchData()}};var o=function(){var e=this,l=e._self._c;return l("el-checkbox-group",e._b({on:{change:function(t){return e.$emit("change",t)}},model:{value:e.bindValue,callback:function(t){e.bindValue=t},expression:"bindValue"}},"el-checkbox-group",e.$attrs,!1),e._l(e.list,function(t){return l("el-checkbox",{key:t.value,attrs:{label:t[e.valueKey]}},[e._v(e._s(t[e.labelKey]))])}),1)},i=[],c=u(s,o,i,!1,null,"04d10ee2",null,null);const _=c.exports;export{_ as default};
